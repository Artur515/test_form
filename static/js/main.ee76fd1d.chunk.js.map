{"version":3,"sources":["components/form/style.module.css","components/greeting/style.module.css","ui/loader/style.module.css","ui/button/Button.jsx","validation/validation.js","api/formApi.js","components/form/Form.jsx","components/greeting/Greeting.jsx","components/comments/Comment.jsx","ui/loader/Loader.jsx","ui/pagination/Pagination.jsx","App.jsx","utils/pages.js","index.js"],"names":["module","exports","Button","children","props","className","validations","required","maxLength","pattern","baseURL","getAllComment","page","axios","get","Form","setModal","useForm","register","handleSubmit","errors","formState","styles","form","onSubmit","data","JSON","stringify","name","text","post","postNewComments","placeholder","type","rows","Greeting","to","startDelay","cursorColor","multiText","multiTextDelay","typeSpeed","Comment","created_at","visible","Loader","load","Pagination","setCheckedPage","checkedPage","onClick","App","useState","modal","comments","setComments","totalPageCount","setTotalPageCount","totalComments","setTotalComments","useEffect","then","response","total","totalPage","limit","Math","ceil","getPerPageCount","pageOnArray","totalPages","result","i","push","getPagesOnArray","exact","path","TransitionGroup","length","map","comment","CSSTransition","timeout","classNames","id","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ee76fd1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1mmYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"style_text__gjPLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load\":\"style_load__20JKg\",\"move\":\"style_move__1yBxc\"};","import React from 'react';\r\n\r\nconst Button = ({children, ...props}) => {\r\n    return (\r\n        <button className=\"btn btn-outline-secondary\"{...props}>{children}</button>\r\n    );\r\n};\r\n\r\nexport default Button;","export const validations = {\r\n    name: {\r\n        required: true,\r\n        maxLength: 20,\r\n        pattern: /^[A-Za-z]+$/i\r\n    },\r\n    message: {\r\n        required: true,\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst baseURL = `https://jordan.ashton.fashion/api/goods/30/comments?page=`\r\n\r\n\r\nexport const getAllComment = (page = 1) => {\r\n    return axios.get(baseURL + page)\r\n}\r\n\r\n\r\nexport const postNewComments = (name, text) => {\r\n    return axios.post(baseURL, {name, text})\r\n}","import React from 'react';\r\nimport styles from './style.module.css'\r\nimport Button from \"../../ui/button/Button\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {validations} from \"../../validation/validation\";\r\nimport {postNewComments} from \"../../api/formApi\";\r\n\r\n\r\nconst Form = ({setModal}) => {\r\n\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm()\r\n    const onSubmit = (data) => {\r\n        JSON.stringify(data)\r\n        const {name, text} = data\r\n        // console.log(name)\r\n        // console.log(text)\r\n        postNewComments(name, text)\r\n        setModal(false)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <div className=\"list-group\">\r\n                <div className=\"list-group-item list-group-item flex-column align-items-start\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                        <h5 className=\"mb-1\">Form</h5>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label mt-4\">Name</label>\r\n                            <input className=\"form-control\"\r\n                                   placeholder=\"Enter name\"\r\n                                   {...register(\"name\", validations.name)}/>\r\n                            {errors?.name?.type === \"required\" && errors?.name?.type === \"required\" &&\r\n                            <small className=\"form-text text-danger \">This field is required</small>}\r\n                            {errors?.name?.type === \"maxLength\" && (\r\n                                <small className=\"form-text text-danger\">Name cannot exceed 20 characters</small>)}\r\n                            {errors?.name?.type === \"pattern\" && (\r\n                                <small className=\"form-text text-danger \">Alphabetical characters only</small>\r\n                            )}\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label mt-4\">Comment</label>\r\n                                <textarea className=\"form-control\" rows=\"3\" placeholder=\"Comment please...\"\r\n                                          {...register(\"text\", validations.message)}\r\n                                />\r\n                                {errors?.text?.type === \"required\" &&\r\n                                <small className=\"form-text text-danger \">This field is required</small>}\r\n                            </div>\r\n                            <Button children={'Send comment'}/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport TypeWriterEffect from 'react-typewriter-effect';\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './style.module.css'\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <Link className={styles.text} to='/form'>\r\n            <TypeWriterEffect\r\n                startDelay={1000}\r\n                cursorColor=\"black\"\r\n                multiText={[\r\n                    'Hey there,',\r\n                    'This is little testing form',\r\n                    'Go'\r\n                ]}\r\n                multiTextDelay={1000}\r\n                typeSpeed={50}\r\n            />\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Greeting;","import React from 'react';\r\n\r\n\r\nconst Comment = ({created_at, name, text, visible}) => {\r\n    return (\r\n        <div className=\"card border-info mb-3\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title text-warning \">Name :{name}</h4>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">created: {created_at}</h6>\r\n                <p className=\"card-text\">{text}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Comment;","import React from 'react';\r\nimport styles from './style.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={styles.load}>\r\n            <div>G</div>\r\n            <div>N</div>\r\n            <div>I</div>\r\n            <div>D</div>\r\n            <div>A</div>\r\n            <div>O</div>\r\n            <div>L</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\n\r\nconst Pagination = ({page, setCheckedPage, checkedPage}) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"pagination pagination-sm\">\r\n                <li onClick={() => {\r\n                    setCheckedPage(page)\r\n                }} className={checkedPage === page ? 'page-item disabled' : 'page-item active'}>\r\n                    <div className='page-link'>{page}</div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import './App.css';\nimport Form from \"./components/form/Form\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Greeting from \"./components/greeting/Greeting\";\nimport Comment from \"./components/comments/Comment\";\nimport Button from \"./ui/button/Button\";\nimport {useEffect, useState} from \"react\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport {getAllComment} from \"./api/formApi\";\nimport Loader from \"./ui/loader/Loader\";\nimport {getPagesOnArray, getPerPageCount} from \"./utils/pages\";\nimport Pagination from \"./ui/pagination/Pagination\";\n\n\nlet page = 1\n\nconst App = () => {\n    const [modal, setModal] = useState(false)\n    const [comments, setComments] = useState([])\n    const [totalPageCount, setTotalPageCount] = useState('')\n    const [checkedPage, setCheckedPage] = useState(1)\n\n    //for button show more\n    const [totalComments, setTotalComments] = useState('')\n    const limit = 10\n\n    //for fast show in open app\n    useEffect(() => {\n        getAllComment(checkedPage)\n            .then(response => {\n                setComments(response.data.data)\n                const total = response.data.total\n                //watch, how many pages\n                setTotalPageCount(getPerPageCount(total, limit))\n                setTotalComments(total)\n            })\n    }, [checkedPage])\n\n\n    //next page show\n    const handleShowMore = () => {\n        page++\n        getAllComment(page)\n            .then(response => {\n                setComments([...comments, ...response.data.data])\n            })\n    }\n\n\n    const pageOnArray = getPagesOnArray(totalPageCount)\n\n\n    // console.log(pageOnArray)\n    // console.log(comments)\n    // console.log(totalPageCount)\n    // console.log(totalComments)\n    // console.log(checkedPage)\n\n    return (\n        <div className=\"app\">\n            <Switch>\n                <Route exact path='/'><Greeting/></Route>\n                <Route exact path='/form'>\n                    {/*можно и по другому реализовать*/}\n                    <Button onClick={() => setModal(!modal)} children={modal ? 'Close form' : 'Open form'}/>\n                    {modal && <Form setModal={setModal}/>}\n                    <div className='app_comments'>\n                        <TransitionGroup>\n                            {comments.length < 0 ? <Loader/> : comments.map((comment) => {\n                                    return (\n                                        <CSSTransition key={comment.id}\n                                                       timeout={500}\n                                                       classNames=\"comment\">\n                                            <Comment text={comment.text}\n                                                     name={comment.name}\n                                                     created_at={comment.created_at}/>\n                                        </CSSTransition>\n                                    )\n                                }\n                            )\n                            }\n                        </TransitionGroup>\n                    </div>\n                    {totalComments === comments.length ? '' : <Button\n                        className='btn btn-primary mb-4'\n                        children={\"Show more\"}\n                        onClick={handleShowMore}\n                    />}\n                    <div className='app_pagination'>\n                        {pageOnArray.map((page) => {\n                            return <Pagination\n                                checkedPage={checkedPage}\n                                setCheckedPage={setCheckedPage}\n                                key={page}\n                                page={page}\n                            />\n                        })}\n                    </div>\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","//calc total pages\r\nexport const getPerPageCount = (totalPage, limit) => {\r\n    return Math.ceil(totalPage / limit)\r\n}\r\n\r\n\r\nexport const getPagesOnArray = (totalPages) => {\r\n    const result = []\r\n    for (let i = 0; i < totalPages; i++) {\r\n        result.push(i + 1)\r\n    }\r\n    return result\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <BrowserRouter basename='/test_form'>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}